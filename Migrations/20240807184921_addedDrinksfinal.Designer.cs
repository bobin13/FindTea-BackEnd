// <auto-generated />
using FindTeaBackEnd.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FindTeaBackEnd.Migrations
{
    [DbContext(typeof(AppDb))]
    [Migration("20240807184921_addedDrinksfinal")]
    partial class addedDrinksfinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FindTeaBackEnd.Models.Drink", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("drink_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("drink_rating")
                        .HasColumnType("real");

                    b.Property<bool>("is_hot_drink")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_registered")
                        .HasColumnType("boolean");

                    b.Property<int>("store_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Drinks");
                });

            modelBuilder.Entity("FindTeaBackEnd.Models.Rating", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("drink_id")
                        .HasColumnType("integer");

                    b.Property<float>("drink_rating")
                        .HasColumnType("real");

                    b.Property<int>("store_id")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("FindTeaBackEnd.Models.Store", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("rating")
                        .HasColumnType("real");

                    b.Property<string>("store_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
